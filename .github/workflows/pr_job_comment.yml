name: PR Comments




on:
 issue_comment:
   types: [created]
   
   
 workflow_dispatch:
   inputs:
     platform_branch:
       description: 'Input Platform branch (default master)'
       required: true
       default: 'master_WD'


 workflow_call:
   inputs:
     platform_branch:
       type: string
       description: 'Input Platform branch (default master)'
       required: true
       default: 'master_WC'


jobs:
 triggerPrWorkflow:
   name: Trigger PR Workflow
   if: >
    (github.event_name == 'workflow_dispatch') || (github.event.issue.pull_request &&
     startsWith(github.event.comment.body, '@toptal-bot run'))
   runs-on: ubuntu-latest
   steps:
       - name: From Github
         shell: bash
         run: |
            echo ${{github.ref}}
       - name: View context attributes
         uses: actions/github-script@v6
         with:
           script: |
             console.log(context.payload.issue.pull_request)
             console.log(context)
            # if (context.payload.issue.pull_request) {
             #  const { owner, repo, number } = context.payload.issue;
              # const { data: pr } = await octokit.rest.pulls.get({ owner, repo, pull_number: number });

             #  console.log(pr.merge_commit_sha);
             #  console.log(pr.head.sha);
             #  console.log(pr.head.ref);
            # }

#      - name: Trigger Features
#        if: ${{ contains(github.event.comment.body, 'features GHA') }}
#        uses: benc-uk/workflow-dispatch@v1.1
#        with:
#          workflow: Features
#          token: ${{ secrets.PERSONAL_TOKEN }}
#          inputs: '{ "talent_portal_branch": "${{ steps.prData.outputs.ref }}" }'

#      - name: React to comment - success or failure
#        if: ${{ always() }}
#        env:
#          JOB_STATUS: ${{ job.status }}
#        uses: actions/github-script@v5
#        with:
#          github-token: ${{ secrets.PERSONAL_TOKEN }}
#          script: |
#            const { owner, repo } = context.issue;
#            const content = process.env.JOB_STATUS === 'success' ? '+1' : '-1'
#            await github.rest.reactions.createForIssueComment({ owner, repo, comment_id: context.payload.comment.id, content });
