name: Gems specs

on:
  workflow_dispatch:
    inputs:
      sha:
        description: Git reference commit.
        type: string
        required: true

  pull_request:
    # Keep paths in sync with .github/workflows/skip_gems_specs.yml
    paths:
      - 'gems/**'

concurrency:
  group: >-
    gems-specs
    ${{ github.repository }}
    ${{ github.workflow }}
    ${{ github.event_name }}
    ${{ github.event.issue.number || github.ref }}
    ${{ github.triggering_actor }}
  cancel-in-progress: true

jobs:
  gems-specs:
    name: Gems specs
    runs-on: ubuntu-latest
    if: >
      !cancelled() &&
      (
        (github.event_name == 'workflow_dispatch') ||
        (inputs.is_workflow_call == 'true') ||
        (
          github.event.issue.pull_request &&
          (
            contains(github.event.comment.body, '@toptal-bot run ') &&
            (
              contains(github.event.comment.body, 'backend pack') ||
              contains(github.event.comment.body, 'default') ||
              contains(github.event.comment.body, 'gems specs') ||
              contains(github.event.comment.body, 'mergecheck') 
            )
          )
        )
      )
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.sha || github.sha }}

      - name: React to comment - success or failure
        # Reaction means that the comment is accepted and everything is ready to run the specs.
        if: github.event_name == 'issue_comment'
        env:
          JOB_STATUS: ${{ job.status }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOPTAL_DEVBOT_TOKEN }}
          script: |
            const { owner, repo } = context.issue;
            const content = process.env.JOB_STATUS === 'success' ? '+1' : '-1'
            await github.rest.reactions.createForIssueComment({ owner, repo, comment_id: context.payload.comment.id, content });

      - name: Run specs
        shell: bash
        run: |
          echo "Done"
